{% import "github.com/matrix-org/matrix-static/mxclient" %}



{% code type RoomAliasesPage struct {
    RoomInfo     mxclient.RoomInfo
    RoomAliases  mxclient.RoomAliases
    PageSize     int
    Page         int
} %}



{% stripspace %}
{% func (p *RoomAliasesPage) Title() %}
    {%s p.RoomInfo.Name %}{% space %} - Public Room Aliases - Matrix Static
{% endfunc %}

{% func (p *RoomAliasesPage) Head() %}
{% endfunc %}

{% func (p *RoomAliasesPage) Header() %}
    {%= PrintRoomHeader(p.RoomInfo) %}
{% endfunc %}

{% func (p *RoomAliasesPage) Body() %}

    {%= PaginatorCurPage(p) %}

    <h5>Canonical Alias: {%s p.RoomInfo.CanonicalAlias %}</h5>

    <table>
        <thead>
            <tr>
                <th>Server</th>
                <th>Aliases</th>
            </tr>
        </thead>
        <tbody>
            {% for _, roomServerAliases := range p.RoomAliases %}
                <tr>
                    <td>{%s roomServerAliases.ServerName %}</td>
                    <td>
                        <ul>
                            {% for _, alias := range roomServerAliases.Aliases %}
                                <li>{%s alias %}</li>
                            {% endfor %}
                        </ul>
                    </td>
                </tr>
            {% endfor %}
        </tbody>
    </table>

    {%= PaginatorFooter(p) %}

{% endfunc %}
{% endstripspace %}



{% code

    func (p *RoomAliasesPage) CurPage() int {
        return p.Page
    }
    func (p *RoomAliasesPage) HasNextPage() bool {
        return len(p.RoomAliases) == p.PageSize
    }
    func (p *RoomAliasesPage) BaseUrl() string {
        return RoomBaseUrl(p.RoomInfo.RoomID) + "/aliases"
    }
    func (p *RoomAliasesPage) BackUrl() string {
        return RoomBaseUrl(p.RoomInfo.RoomID) + "/"
    }

%}